// Code generated by db2go. DO NOT EDIT.
// https://github.com/civet148/sqlca

package models

const TableNameRunConfig = "run_config" //run config table

const (
	RUN_CONFIG_COLUMN_ID           = "id"
	RUN_CONFIG_COLUMN_CONFIG_NAME  = "config_name"
	RUN_CONFIG_COLUMN_CONFIG_KEY   = "config_key"
	RUN_CONFIG_COLUMN_CONFIG_VALUE = "config_value"
	RUN_CONFIG_COLUMN_REMARK       = "remark"
	RUN_CONFIG_COLUMN_DELETED      = "deleted"
	RUN_CONFIG_COLUMN_CREATED_TIME = "created_time"
)

type RunConfigDO struct {
	Id          int32  `json:"id" db:"id" bson:"_id"`                                               //incr id
	ConfigName  string `json:"config_name" db:"config_name" bson:"config_name"`                     //config name
	ConfigKey   string `json:"config_key" db:"config_key" bson:"config_key"`                        //config key
	ConfigValue string `json:"config_value" db:"config_value" sqlca:"isnull" bson:"config_value"`   //config value
	Remark      string `json:"remark" db:"remark" sqlca:"isnull" bson:"remark"`                     //remark
	Deleted     bool   `json:"deleted" db:"deleted" bson:"deleted"`                                 //is deleted(0=false 1=true)
	CreatedTime string `json:"created_time" db:"created_time" sqlca:"readonly" bson:"created_time"` //created time
}

func (do *RunConfigDO) GetId() int32            { return do.Id }
func (do *RunConfigDO) SetId(v int32)           { do.Id = v }
func (do *RunConfigDO) GetConfigName() string   { return do.ConfigName }
func (do *RunConfigDO) SetConfigName(v string)  { do.ConfigName = v }
func (do *RunConfigDO) GetConfigKey() string    { return do.ConfigKey }
func (do *RunConfigDO) SetConfigKey(v string)   { do.ConfigKey = v }
func (do *RunConfigDO) GetConfigValue() string  { return do.ConfigValue }
func (do *RunConfigDO) SetConfigValue(v string) { do.ConfigValue = v }
func (do *RunConfigDO) GetRemark() string       { return do.Remark }
func (do *RunConfigDO) SetRemark(v string)      { do.Remark = v }
func (do *RunConfigDO) GetDeleted() bool        { return do.Deleted }
func (do *RunConfigDO) SetDeleted(v bool)       { do.Deleted = v }
func (do *RunConfigDO) GetCreatedTime() string  { return do.CreatedTime }
func (do *RunConfigDO) SetCreatedTime(v string) { do.CreatedTime = v }

/*
CREATE TABLE `run_config` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'incr id',
  `config_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'config name',
  `config_key` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'config key',
  `config_value` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT 'config value',
  `remark` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT 'remark',
  `deleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'is deleted(0=false 1=true)',
  `created_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'created time',
  PRIMARY KEY (`id`),
  UNIQUE KEY `UNIQ_NAME_KEY` (`config_name`,`config_key`)
) ENGINE=InnoDB AUTO_INCREMENT=137 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='run config table';
*/
