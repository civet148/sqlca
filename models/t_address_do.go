// Code generated by db2go. DO NOT EDIT.
// https://github.com/civet148/sqlca

package models

const TableNameTAddress = "t_address" //

const (
	T_ADDRESS_COLUMN_ID       = "id"
	T_ADDRESS_COLUMN_LNG      = "lng"
	T_ADDRESS_COLUMN_LAT      = "lat"
	T_ADDRESS_COLUMN_NAME     = "name"
	T_ADDRESS_COLUMN_GEOHASH  = "geohash"
	T_ADDRESS_COLUMN_LOCATION = "location"
)

type TAddressDO struct {
	Id       uint64  `json:"id" db:"id" bson:"id"`                   //
	Lng      float64 `json:"lng" db:"lng" bson:"lng"`                //
	Lat      float64 `json:"lat" db:"lat" bson:"lat"`                //
	Name     string  `json:"name" db:"name" bson:"name"`             //
	Geohash  string  `json:"geohash" db:"geohash" bson:"geohash"`    //
	Location string  `json:"location" db:"location" bson:"location"` //
}

func (do *TAddressDO) GetId() uint64        { return do.Id }
func (do *TAddressDO) SetId(v uint64)       { do.Id = v }
func (do *TAddressDO) GetLng() float64      { return do.Lng }
func (do *TAddressDO) SetLng(v float64)     { do.Lng = v }
func (do *TAddressDO) GetLat() float64      { return do.Lat }
func (do *TAddressDO) SetLat(v float64)     { do.Lat = v }
func (do *TAddressDO) GetName() string      { return do.Name }
func (do *TAddressDO) SetName(v string)     { do.Name = v }
func (do *TAddressDO) GetGeohash() string   { return do.Geohash }
func (do *TAddressDO) SetGeohash(v string)  { do.Geohash = v }
func (do *TAddressDO) GetLocation() string  { return do.Location }
func (do *TAddressDO) SetLocation(v string) { do.Location = v }

/*
CREATE TABLE `t_address` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `lng` double(11,7) DEFAULT NULL,
  `lat` double(11,7) DEFAULT NULL,
  `name` char(80) CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  `geohash` varchar(20) CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  `location` point DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
*/
