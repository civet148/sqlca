// Code generated by db2go. DO NOT EDIT.
// https://github.com/civet148/sqlca

package models

import "github.com/civet148/sqlca/v2"

const TableNameUsers = "users" //

const (
	USERS_COLUMN_ID         = "id"
	USERS_COLUMN_NAME       = "name"
	USERS_COLUMN_PHONE      = "phone"
	USERS_COLUMN_SEX        = "sex"
	USERS_COLUMN_EMAIL      = "email"
	USERS_COLUMN_DISABLE    = "disable"
	USERS_COLUMN_BALANCE    = "balance"
	USERS_COLUMN_SEX_NAME   = "sex_name"
	USERS_COLUMN_EXTRA_DATA = "extra_data"
	USERS_COLUMN_CREATED_AT = "created_at"
	USERS_COLUMN_UPDATED_AT = "updated_at"
)

type UsersDO struct {
	Id        uint32        `json:"id" db:"id" bson:"id"`                                          //auto inc id
	Name      string        `json:"name" db:"name" bson:"name"`                                    //user name
	Phone     string        `json:"phone" db:"phone" bson:"phone"`                                 //phone number
	Sex       uint8         `json:"sex" db:"sex" bson:"sex"`                                       //user sex
	Email     string        `json:"email" db:"email" bson:"email"`                                 //email
	Disable   bool          `json:"disable" db:"disable" bson:"disable"`                           //disabled(0=false 1=true)
	Balance   sqlca.Decimal `json:"balance" db:"balance" bson:"balance"`                           //balance of decimal
	SexName   string        `json:"sex_name" db:"sex_name" bson:"sex_name"`                        //sex name
	ExtraData *UserData   `json:"extra_data" db:"extra_data" bson:"extra_data"`                  //extra data
	CreatedAt string        `json:"created_at" db:"created_at" sqlca:"readonly" bson:"created_at"` //create time
	UpdatedAt string        `json:"updated_at" db:"updated_at" sqlca:"readonly" bson:"updated_at"` //update time
}

func (do *UsersDO) GetId() uint32              { return do.Id }
func (do *UsersDO) SetId(v uint32)             { do.Id = v }
func (do *UsersDO) GetName() string            { return do.Name }
func (do *UsersDO) SetName(v string)           { do.Name = v }
func (do *UsersDO) GetPhone() string           { return do.Phone }
func (do *UsersDO) SetPhone(v string)          { do.Phone = v }
func (do *UsersDO) GetSex() uint8              { return do.Sex }
func (do *UsersDO) SetSex(v uint8)             { do.Sex = v }
func (do *UsersDO) GetEmail() string           { return do.Email }
func (do *UsersDO) SetEmail(v string)          { do.Email = v }
func (do *UsersDO) GetDisable() bool           { return do.Disable }
func (do *UsersDO) SetDisable(v bool)          { do.Disable = v }
func (do *UsersDO) GetBalance() sqlca.Decimal  { return do.Balance }
func (do *UsersDO) SetBalance(v sqlca.Decimal) { do.Balance = v }
func (do *UsersDO) GetSexName() string         { return do.SexName }
func (do *UsersDO) SetSexName(v string)        { do.SexName = v }
func (do *UsersDO) GetExtraData() *UserData  { return do.ExtraData }
func (do *UsersDO) SetExtraData(v *UserData) { do.ExtraData = v }
func (do *UsersDO) GetCreatedAt() string       { return do.CreatedAt }
func (do *UsersDO) SetCreatedAt(v string)      { do.CreatedAt = v }
func (do *UsersDO) GetUpdatedAt() string       { return do.UpdatedAt }
func (do *UsersDO) SetUpdatedAt(v string)      { do.UpdatedAt = v }

/*
CREATE TABLE `users` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'auto inc id',
  `name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT 'user name',
  `phone` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT 'phone number',
  `sex` tinyint unsigned NOT NULL DEFAULT '0' COMMENT 'user sex',
  `email` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT 'email',
  `disable` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'disabled(0=false 1=true)',
  `balance` decimal(10,2) NOT NULL DEFAULT '0.00' COMMENT 'balance of decimal',
  `sex_name` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT 'sex name',
  `extra_data` text COLLATE utf8mb4_general_ci COMMENT 'extra data',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'create time',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'update time',
  PRIMARY KEY (`id`) USING BTREE,
  KEY `phone` (`phone`)
) ENGINE=InnoDB AUTO_INCREMENT=67 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci ROW_FORMAT=DYNAMIC;
*/
